<UserControl x:Class="CocoloresPEP.Views.Planung.PlanungView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:images="clr-namespace:CocoloresPEP.Images"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:CocoloresPEP.Common.WpfCore.Behaviors"
             xmlns:planung="clr-namespace:CocoloresPEP.Views.Planung"
             xmlns:entities="clr-namespace:CocoloresPEP.Common.Entities"
             xmlns:controls="clr-namespace:CocoloresPEP.Common.WpfCore.Controls">
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ToolBar Grid.Row="0" IsOverflowOpen="False"> 
            <Button ToolTip="Speichern" 
                    Command="{Binding Path=SavePlanungswocheCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Speichern/>
                </Viewbox>
            </Button>
            <Separator/>
            <TextBlock Text="Jahr/ Kalenderwoche:" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Path=Jahr, UpdateSourceTrigger=LostFocus}" MinWidth="50"
                     MaxLength="4">
                <i:Interaction.Behaviors>
                    <behaviors:TextBoxInputBehavior InputMode="DigitInput" />
                </i:Interaction.Behaviors>
            </TextBox>
            <TextBlock Text="/" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Path=KalenderWoche, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" MinWidth="50"
                     MaxLength="2">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding Path=CreatePlanungswocheCommand}"></KeyBinding>
                </TextBox.InputBindings>
                <i:Interaction.Behaviors>
                    <behaviors:TextBoxInputBehavior InputMode="DigitInput" />
                </i:Interaction.Behaviors>
            </TextBox>
            <Button ToolTip="Planungswoche anlegen" 
                    Command="{Binding Path=CreatePlanungswocheCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Plus/>
                </Viewbox>
            </Button>
            <Button ToolTip="Planungswoche löschen" 
                    Command="{Binding Path=DeletePlanungswocheCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Delete/>
                </Viewbox>
            </Button>
            <Separator/>
            <Button ToolTip="Planung ausführen" 
                    Command="{Binding Path=RunPlanungCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                   <images:DoWork/>
                </Viewbox>
            </Button>
            <Button ToolTip="Planung prüfen" 
                    Command="{Binding Path=RunPlanungCheckCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Check/>
                </Viewbox>
            </Button>
            <Separator/>
            <Button ToolTip="Nach Excel exportieren" 
                    Command="{Binding Path=ExportExcelCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:ExportExcel/>
                </Viewbox>
            </Button>
        </ToolBar>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="250"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <TreeView Grid.Column="0" 
                      ItemsSource="{Binding PlanungView.Groups}"
                      >
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type CollectionViewGroup}" ItemsSource="{Binding Items}">
                        <TextBlock Text="{Binding Name}"/>
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=KalenderWoche, StringFormat='Woche {0}'}"/>
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <i:Interaction.Behaviors>
                    <behaviors:TreeViewSelectedItemBehavior SelectedItem="{Binding SelectedArbeitswoche, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
            </TreeView>
            
            <Grid Grid.Column="1" Margin="50,0,0,0" HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Content="{Binding SelectedArbeitswocheInfo}"></Label>

                <DataGrid Grid.Row="1" x:Name="GridPlanung"
                          ItemsSource="{Binding ArbeitswocheVorschau}"
                          AutoGenerateColumns="False" IsReadOnly="True"
                          CanUserSortColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                          SelectedValue="{Binding SelectedMitarbeiter, Mode=TwoWay}"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          IsSynchronizedWithCurrentItem="True">
                    <DataGrid.Resources>
                      
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" MinWidth="150"
                                            Binding="{Binding Mitarbeiter.Name}"
                                            >
                          <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Blau}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeBlau}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Gruen}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Rot}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Nest}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Montag" MinWidth="100" 
                                            Binding="{Binding Montag.IstZeitenInfo}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Blau}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeBlau}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Dienstag" MinWidth="100"
                                            Binding="{Binding Dienstag.IstZeitenInfo}"
                                            >
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Blau}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeBlau}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Mittwoch" MinWidth="100"
                                            Binding="{Binding Mittwoch.IstZeitenInfo}"
                                            >
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Blau}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeBlau}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Donnerstag" MinWidth="100"
                                            Binding="{Binding Donnerstag.IstZeitenInfo}"
                                            >
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Blau}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeBlau}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Freitag" MinWidth="100"
                                            Binding="{Binding Freitag.IstZeitenInfo}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Blau}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeBlau}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
       
            <Grid Grid.Column="2" HorizontalAlignment="Left" Margin="25,0,0,0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=GridPlanung, Path=SelectedItem}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <Border BorderBrush="Black" BorderThickness="1" Padding="10,5">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <planung:MitarbeiterDetailView DataContext="{Binding ElementName=GridPlanung, Path=SelectedItem.Mitarbeiter}"/>
                    </ScrollViewer>
                </Border>
                
                
            </Grid>
        </Grid>

        <!--IsBusy Anzeige-->
        <controls:BusyControl Grid.Row="0" Grid.RowSpan="2"
                              ProgressbarSize="120"
                              IsBusy="{Binding IsBusy}" >
        </controls:BusyControl>

    </Grid>
</UserControl>
