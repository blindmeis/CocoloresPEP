<UserControl x:Class="CocoloresPEP.Views.Planung.PlanungView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:images="clr-namespace:CocoloresPEP.Images"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:CocoloresPEP.Common.WpfCore.Behaviors"
             xmlns:planung="clr-namespace:CocoloresPEP.Views.Planung"
             xmlns:entities="clr-namespace:CocoloresPEP.Common.Entities"
             xmlns:controls="clr-namespace:CocoloresPEP.Common.WpfCore.Controls"
             xmlns:focus="clr-namespace:CocoloresPEP.Common.WpfCore.Behaviors.Focus"
             x:Name="Uc">
    <i:Interaction.Behaviors>
        <focus:SetFocusToBindingBehavior BindingName="KalenderWoche" SetFocusToBindingPath="{Binding Path=FocusToBindingPath, Mode=TwoWay}"/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ToolBar Grid.Row="0" IsOverflowOpen="False">
            <Button ToolTip="Speichern" 
                    Command="{Binding Path=SavePlanungswocheCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Speichern/>
                </Viewbox>
            </Button>
            <Separator/>
            <TextBlock Text="Jahr/ Kalenderwoche:" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Path=Jahr, UpdateSourceTrigger=LostFocus}" MinWidth="50"
                     MaxLength="4">
                <i:Interaction.Behaviors>
                    <behaviors:TextBoxInputBehavior InputMode="DigitInput" />
                </i:Interaction.Behaviors>
            </TextBox>
            <TextBlock Text="/" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Path=KalenderWoche, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" MinWidth="50"
                     MaxLength="2">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding Path=CreatePlanungswocheCommand}"></KeyBinding>
                </TextBox.InputBindings>
                <i:Interaction.Behaviors>
                    <behaviors:TextBoxSelectAllOnFocusBehavior/>
                    <behaviors:TextBoxInputBehavior InputMode="DigitInput" />
                </i:Interaction.Behaviors>
            </TextBox>
            <Button ToolTip="Planungswoche anlegen" 
                    Command="{Binding Path=CreatePlanungswocheCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Plus/>
                </Viewbox>
            </Button>
            <Button ToolTip="Planungswoche löschen" 
                    Command="{Binding Path=DeletePlanungswocheCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Delete/>
                </Viewbox>
            </Button>
            <Separator/>
            <Button ToolTip="Planung ausführen" 
                    Command="{Binding Path=RunPlanungCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:DoWork/>
                </Viewbox>
            </Button>
            <Button ToolTip="Planung prüfen" 
                    Command="{Binding Path=RunPlanungCheckCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:Check/>
                </Viewbox>
            </Button>
            <Separator/>
            <Button ToolTip="Nach Excel exportieren" 
                    Command="{Binding Path=ExportPlanungCommand}"
                    Style="{DynamicResource ToolbarButtonStyle}"
                    >
                <Viewbox Width="24" Height="24">
                    <images:ExportExcel/>
                </Viewbox>
            </Button>
        </ToolBar>

        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Expander Grid.Column="0" ExpandDirection="Right" IsExpanded="True"
                      Background="{StaticResource ColorExpanderBackground}" Padding="5,0,15,0">
                <Expander.Header>
                    <TextBlock Text="Arbeitswochen" FontWeight="Bold">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="-90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <TreeView  MinWidth="175" Background="Transparent" BorderThickness="0"
                      ItemsSource="{Binding PlanungView.Groups}">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type CollectionViewGroup}" ItemsSource="{Binding Items}">
                            <TextBlock Text="{Binding Name}"/>
                            <HierarchicalDataTemplate.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=KalenderWoche, StringFormat='Woche {0}'}"/>
                                </DataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <i:Interaction.Behaviors>
                        <behaviors:TreeViewSelectedItemBehavior SelectedItem="{Binding SelectedArbeitswoche, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>
                </TreeView>

            </Expander>

            <Grid Grid.Column="1" Margin="50,0,0,0" HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Expander Grid.Row="0" Margin="0,10,0,15">
                    <Expander.Header>
                        <TextBlock Text="{Binding SelectedArbeitswocheInfo}" FontWeight="Bold">
                            <TextBlock.LayoutTransform>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"></ScaleTransform>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Expander.Header>

                </Expander>

                <DataGrid Grid.Row="1"
                          ItemsSource="{Binding ArbeitswocheVorschau}"
                          AutoGenerateColumns="False" IsReadOnly="True"
                          CanUserSortColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                          CanUserResizeColumns="False" CanUserResizeRows="False"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          SelectedItem="{Binding SelectedPlanungswocheMitarbeiterItem, Mode=TwoWay}"
                          IsSynchronizedWithCurrentItem="True">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn MinWidth="150" Header="Mitarbeiter">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Mitarbeiter.Name}" />
                                    </Grid>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Gelb}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGelb}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Gruen}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Rot}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mitarbeiter.DefaultGruppe}" Value="{x:Static entities:GruppenTyp.Nest}">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="50">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Viewbox Width="24" Height="24">
                                            <images:Uhr/>
                                        </Viewbox>
                                        <Rectangle ToolTip="Arbeitsstunden (angeordnet)"
                                                   Fill="Transparent" IsHitTestVisible="True"
                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Mitarbeiter.WochenStunden}" HorizontalAlignment="Center"
                                               FontWeight="Bold">
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Width="50">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                        <TextBlock Text="ZaK" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   ToolTip="Zeit am Kind/ Frei"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ArbeitAmKindStunden,StringFormat={}{0:#.##}}" HorizontalAlignment="Center"
                                               FontWeight="Bold">
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Width="50">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                        <TextBlock Text="KFZ" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   ToolTip="Kind freie Zeit"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding KfzStunden}" HorizontalAlignment="Center"
                                               FontWeight="Bold">
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Width="50">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                        <TextBlock Text="+-" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PlusMinusStunden, Converter={StaticResource MyNumberToAbsolutOneWayConverter}, StringFormat={}{0:#,##0.00}}" HorizontalAlignment="Center"
                                               FontWeight="Bold">
                                        <TextBlock.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding PlusMinusStunden, Mode=OneWay, Converter={StaticResource MyStundenToMinutenConverter}, StringFormat={}{0:#,#.}, FallbackValue=0, TargetNullValue=0}"/>
                                                <Run Text="Minuten"/>
                                            </TextBlock>
                                        </TextBlock.ToolTip>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PlusMinusStunden, Converter={StaticResource MyCheckPositivNegativeZeroNumberConverter}}" Value="true">
                                                        <Setter Property="Foreground" Value="Green"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PlusMinusStunden, Converter={StaticResource MyCheckPositivNegativeZeroNumberConverter}}" Value="false">
                                                        <Setter Property="Foreground" Value="Red"></Setter>
                                                    </DataTrigger>
                                                     <DataTrigger Binding="{Binding PlusMinusStunden, Converter={StaticResource MyCheckPositivNegativeZeroNumberConverter}}" Value="{x:Null}">
                                                        <Setter Property="ToolTip.Visibility" Value="Hidden"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="130" >
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <planung:PlanungMitarbeiterTagHeaderControl 
                                            Wochentag="Montag"
                                            IsFeiertag="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.IsMontagFeiertag, Mode=TwoWay}"
                                            HasGrossteam="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.HasMontagGrossteam, Mode=TwoWay}"
                                            ArbeitstagWrapper="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.Montag, Mode=OneWay}"/>

                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <planung:PlanungMitarbeiterTagControl PlanungstagViewmodel="{Binding Path=Montag}" MitarbeiterViewmodel="{Binding Mitarbeiter}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gelb}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGelb}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Montag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="130">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <planung:PlanungMitarbeiterTagControl PlanungstagViewmodel="{Binding Path=Dienstag}" MitarbeiterViewmodel="{Binding Mitarbeiter}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <planung:PlanungMitarbeiterTagHeaderControl 
                                              Wochentag="Dienstag"
                                              IsFeiertag="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.IsDienstagFeiertag, Mode=TwoWay}"
                                              HasGrossteam="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.HasDienstagGrossteam, Mode=TwoWay}"
                                              ArbeitstagWrapper="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.Dienstag, Mode=OneWay}"/>

                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gelb}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGelb}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Dienstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="130">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <planung:PlanungMitarbeiterTagControl PlanungstagViewmodel="{Binding Path=Mittwoch}" MitarbeiterViewmodel="{Binding Mitarbeiter}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <planung:PlanungMitarbeiterTagHeaderControl 
                                            Wochentag="Mittwoch"
                                            IsFeiertag="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.IsMittwochFeiertag, Mode=TwoWay}"
                                            HasGrossteam="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.HasMittwochGrossteam, Mode=TwoWay}"
                                            ArbeitstagWrapper="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.Mittwoch, Mode=OneWay}"/>

                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gelb}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGelb}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mittwoch.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="130" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <planung:PlanungMitarbeiterTagControl PlanungstagViewmodel="{Binding Path=Donnerstag}" MitarbeiterViewmodel="{Binding Mitarbeiter}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <planung:PlanungMitarbeiterTagHeaderControl 
                                            Wochentag="Donnerstag"
                                            IsFeiertag="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.IsDonnerstagFeiertag, Mode=TwoWay}"
                                             HasGrossteam="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.HasDonnerstagGrossteam, Mode=TwoWay}"
                                            ArbeitstagWrapper="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.Donnerstag, Mode=OneWay}"/>

                                    </Grid>

                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gelb}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGelb}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Donnerstag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="130">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <planung:PlanungMitarbeiterTagControl PlanungstagViewmodel="{Binding Path=Freitag}" MitarbeiterViewmodel="{Binding Mitarbeiter}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <planung:PlanungMitarbeiterTagHeaderControl 
                                            Wochentag="Freitag"
                                            IsFeiertag="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.IsFreitagFeiertag, Mode=TwoWay}"
                                             HasGrossteam="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.HasFreitagGrossteam, Mode=TwoWay}"
                                            ArbeitstagWrapper="{Binding ElementName=Uc, Path=DataContext.SelectedArbeitswoche.Freitag, Mode=OneWay}"/>

                                    </Grid>

                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gelb}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGelb}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Gruen}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeGruen}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Rot}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeRot}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Freitag.EingeteiltSollTyp, Converter={StaticResource MyEnumHasFlagConverter}, ConverterParameter={x:Static entities:GruppenTyp.Nest}}" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ColorGruppeNest}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <TextBlock Grid.Row="2" Margin="10,10,0,0"
                           Text="{Binding Path=SelectedArbeitswoche.SummeAngeordneteStunden, Mode=OneWay, StringFormat='Pädagogische Mitarbeiter Stunden: &#x2211; {0}h'}"></TextBlock>

            </Grid>

            <Grid Grid.Column="2" HorizontalAlignment="Left" Margin="25,0,0,0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedPlanungswocheMitarbeiterItem}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Expander ExpandDirection="Left" IsExpanded="True" 
                          Background="{StaticResource ColorExpanderBackground}" Padding="15,0,5,0">
                    <Expander.Header>
                        <TextBlock Text="Mitarbeiterdetails" FontWeight="Bold">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Expander.Header>
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <planung:MitarbeiterDetailView MitarbeiterViewmodel="{Binding Path=SelectedPlanungswocheMitarbeiter, Mode=OneWay}"
                                                       DisplayDateStart="{Binding Path=SelectedPlanungswocheMitarbeiterItem.Montag.Datum}"
                                                       DisplayDateEnd="{Binding Path=SelectedPlanungswocheMitarbeiterItem.Freitag.Datum}"
                                                       />
                    </ScrollViewer>
                </Expander>

            </Grid>
        </Grid>

        <!--IsBusy Anzeige-->
        <controls:BusyControl Grid.Row="0" Grid.RowSpan="2"
                              ProgressbarSize="120"
                              IsBusy="{Binding IsBusy}" >
        </controls:BusyControl>

    </Grid>
</UserControl>
